
@using WebCV.Application.Modules.PersonModule.Queries.PersonGetByIdQuery
@using WebCV.Domain.Models.Stables
@model PersonGetByIdRequestDto

@{
    ViewData["Title"] = "Index";

    // Calculate the age
    DateTime today = DateTime.Today;
    DateTime dateOfBirth = Model.DateOfBirth; // The DateOfBirth property from your model
    int age = today.Year - dateOfBirth.Year;

    // Subtract another year if we haven't had our birthday yet this year
    if (dateOfBirth > today.AddYears(-age)) age--;
}

<!-- ABOUT ME -->
                <div role="tabpanel" class="tab-pane fade in active" id="about-me">
                  <div class="inside-sec"> 
                    <!-- BIO AND SKILLS -->
                    <h5 class="tittle">About Me</h5>
                    
                    <!-- Blog -->
                    <section class="about-me padding-top-10"> 
                      
                      <!-- Personal Info -->
                      <ul class="personal-info">
                        <li>
                          <p> <span> Name</span> @Model.FullName </p>
                        </li>
                        <li>
                    <p>
                        <span> Age</span> @age Years
                    </p>
                        </li>
                        <li>
                          <p> <span> Location</span> @Model.Location </p>
                        </li>
                        <li>
                          <p> <span> Experience</span> @Model.Experience Years </p>
                        </li>
                        <li>
                    <p> <span> Degree</span> @Model.Degree </p>
                        </li>
                        <li>
                    <p> <span> Career Level</span> @Model.CareerLevel </p>
                        </li>
                        <li>
                          <p> <span> Phone</span> @Model.Phone </p>
                        </li>
                    @if (!string.IsNullOrEmpty(Model.Fax))
                    {
                        <li>
                            <p><span> FAX</span> @Model.Fax </p>
                        </li>
                    }
                        <li>
                          <p> <span> E-mail</span> <a href="#."> @Model.Email </a> </p>
                        </li>
                    @if (!string.IsNullOrEmpty(Model.Website))
                    {
                        <li>
                            <span> Website</span><a href="https://@Model.Website"> @Model.Website </a>
                        </li>
                    }
                      </ul>
                      
                      <!-- I’m Web Designer -->
                      <h5 class="tittle">I’m Web Designer</h5>
                      <div class="padding-20">
                        @Model.Bio
                      </div>
                      
                      <!-- Services -->
                      <h5 class="tittle">Services</h5>
                        @await Component.InvokeAsync("Services");
                      <!-- Skills -->
                      <h5 class="tittle">Skills</h5>
                      
                      <!-- Sound Engineering -->
                      <div class="panel-group accordion padding-20" id="accordion">
                @await Component.InvokeAsync("PersonSkills");


                      </div>
                    </section>
                  </div>
                </div>

